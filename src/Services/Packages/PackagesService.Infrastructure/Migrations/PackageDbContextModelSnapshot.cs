// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PackagesTask.Infrastructure.Persistence;

#nullable disable

namespace PackagesService.Infrastructure.Migrations
{
    [DbContext(typeof(PackageDbContext))]
    partial class PackageDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PackagesService.Domain.Models.Package", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.ComplexProperty<Dictionary<string, object>>("Destination", "PackagesService.Domain.Models.Package.Destination#Address", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("character varying(200)");

                            b1.Property<string>("ZIP")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Weight", "PackagesService.Domain.Models.Package.Weight#Weight", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<double>("Kilograms")
                                .HasColumnType("double precision");
                        });

                    b.HasKey("Id");

                    b.ToTable("packages");
                });
#pragma warning restore 612, 618
        }
    }
}
