version: '3.9'

services:
  packagespostgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: PackageDb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5442:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
 

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlserverdata:/var/opt/mssql



  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "1242:80"
    depends_on:
      - packagespostgres

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI

  yarpapigateway:
    build:
      context: .
      dockerfile: src/APIsGateway/YarpAPIsGateway/Dockerfile
    depends_on:
      - packagesapi
      - deliveryapi
    ports:
      - "6004:8080"
      - "6064:8081"
 
  authapi:
    build:
      context: .
      dockerfile: src/Services/Authorization/AuthService/Dockerfile
    depends_on:
      - sqlserver
    ports:
      - "3333:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development

  packagesapi:
    build:
      context: .
      dockerfile: src/Services/Packages/PackagesService.API/Dockerfile
    depends_on:
      - packagespostgres
      - authapi
    ports:
      - "7777:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development

  deliveryapi:
    build:
      context: .
      dockerfile: src/Services/Delivery/DeliveryService.API/Dockerfile
    depends_on:
      - sqlserver
      - authapi
    ports:
      - "1111:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: Development


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.4
    container_name: kibana
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200

volumes:
  pgdata:
  sqlserverdata:  
  esdata: